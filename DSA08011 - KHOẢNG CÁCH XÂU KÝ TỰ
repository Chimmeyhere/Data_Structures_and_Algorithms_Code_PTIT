#include <bits/stdc++.h>
#define endl "\n"
using namespace std;
bool cmp(string a, string b)
{
    int s = 0;
    for (int i = 0; i < a.size(); i++)
        if (a[i] != b[i])
            s++;
    if (s == 1)
        return 1;
    return 0;
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        string st, ed, k, a;
        cin >> n >> st >> ed;
        pair<string, int> u, x;
        queue<pair<string, int>> q;
        set<string> s;
        for (int i = 1; i <= n; i++)
        {
            cin >> a;
            s.insert(a);
        }
        s.erase(st);
        u.first = st;
        u.second = 1;
        q.push(u);
        while (q.size())
        {
            u = q.front();
            q.pop();
            if (u.first == ed)
            {
                cout << u.second << endl;
                break;
            }
            x.second = u.second + 1;
            for (int i = 0; i < u.first.size(); i++)
            {
                k = u.first;
                for (char j = 'A'; j <= 'Z'; j++)
                {
                    k[i] = j;
                    if (s.find(k) != s.end())
                    {
                        s.erase(k);
                        x.first = k;
                        q.push(x);
                    }
                }
            }
        }
    }
}
/* Do Xuan Huong
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@##################@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@@@@@@
@@@@@@@@@@@@&####################################@@@@@@@@@@@@
@@@@@@@@@@##########################################@@@@@@@@@
@@@@@@@@##############################################@@@@@@@
@@@@@@#################################################@@@@@@
@@@@@####################################################@@@@
@@@%#####################@@@@@@@@@@@######################@@@
@@@###################@@@@@@@@@@@@@@@@@####################@@
@@##################@@@@@@         @@@@@@##################@@
@@#################@@@@@             @@@@###################@
@@@@@@@@@@@@@@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@@@@@@@
@                  &@@@@             @@@@           .......@@
@@                  @@@@@@         @@@@@@           .......@@
@@                    @@@@@@@@@@@@@@@@@            .......@@@
@@@                      @@@@@@@@@@@               ......@@@@
@@@@                                              ......@@@@@
@@@@@@                                           ......@@@@@@
@@@@@@@                                         .....@@@@@@@@
@@@@@@@@@                                     .....@@@@@@@@@@
@@@@@@@@@@@@                                ....@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@                         ....@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%                .@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/
